// Generated by Selenium IDE
const axios = require('axios') 

const { Builder, By, Key, until } = require('selenium-webdriver')
var chrome = require('selenium-webdriver/chrome') 
const assert = require('assert')

describe('EZchemtech_newApp', function() {
  this.timeout(30000)
  let driver
  let vars
	
  function sleep(ms){
	  const wakeUpTime = Date.now() + ms ;
	  while ( Date.now() < wakeUpTime ){} 
  }

var selenium = require('selenium-webdriver');	
var capabilities = selenium.Capabilities.chrome();
capabilities.set('goog:chromeOptions',{
      'excludeSwitches': ['enable-automation'],
      'useAutomationExtension': false 
})
// var builder = new selenium.Builder().forBrowser("chrome").withCapabilities(capabilities).build();
// var options = new chrome.Options();
//      console.log( capabilities ) 

  beforeEach(async function() {
    driver = await new Builder()
		  .forBrowser('chrome')
	          .withCapabilities( capabilities )
		  .build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  async function waitForWindow(timeout = 2) {
    await driver.sleep(timeout)
    const handlesThen = vars["windowHandles"]
    const handlesNow = await driver.getAllWindowHandles()
    if (handlesNow.length > handlesThen.length) {
      return handlesNow.find(handle => (!handlesThen.includes(handle)))
    }
    throw new Error("New window did not appear before timeout")
  }
  it('EZchemtech_newApp', async function() {
	  try{
		  // Test name: EZchemtech_newApp
		  // Step # | name | target | value
		  // 1 | open | /homepage/ | 
		  await driver.get("http://34.64.240.149:3004/homepage/")
		  // 2 | setWindowSize | 1689x728 | 
		  await driver.manage().window().setRect({ width: 1689, height: 728 })
		  // 3 | click | css=#menu-community > .item | 
		  await driver.findElement(By.css("#menu-community > .item")).click()
		  // 4 | click | id=email_address | 
		  await driver.findElement(By.id("email_address")).click()
		  // 5 | type | id=email_address | star_horse@naver.com
		  await driver.findElement(By.id("email_address")).sendKeys("star_horse@naver.com")
		  // 6 | type | id=password | ch1whdrb
		  await driver.findElement(By.id("password")).sendKeys("ch1whdrb")
		  // 7 | click | css=.btn-info | 
		  await driver.findElement(By.css(".btn-info")).click()
		  // 8 | click | css=.form-group:nth-child(4) .btn | 
		  vars["windowHandles"] = await driver.getAllWindowHandles()	  
		  sleep(3000) 	
		  // 9 | selectWindow | handle=${win1141} | 
		  await driver.findElement(By.css(".form-group:nth-child(4) .btn")).click()
		  // 10 | click | linkText=Design[collections] | 
		  vars["win1141"] = await waitForWindow(2000)
		  // 11 | click | css=#sidebarCollapse > span | 
		  await driver.switchTo().window(vars["win1141"])
		  sleep(3000) 	
		  // 12 | click | linkText=#[NEW App] | 
		  await driver.findElement(By.linkText("Design[collections]")).click()
		  sleep(3000) 	
		  // 13 | click | id=app_name | 
		  await driver.findElement(By.css("#sidebarCollapse > span")).click()
		  sleep(3000) 	
		  // 14 | type | id=app_name | 1234
		  await driver.findElement(By.linkText("#[NEW App]")).click()
		  sleep(3000) 	
		  // 15 | click | css=.btn-secondary | 
		  await driver.findElement(By.id("app_name")).click()
		  await driver.findElement(By.id("app_name")).sendKeys("1234")
		  await driver.findElement(By.css(".btn-secondary")).click()
	  }catch(err){
		  let jandiUrl = 'https://wh.jandi.com/connect-api/webhook/13487135/639bda448c308a1f8a484e3142b4dbd4'
		  let jandiHeaders = { 'Accept': 'application/vnd.tosslab.jandi-v2+json',
				 	'Content-Type': 'application/json'
		  }
		  console.log('err:!!!!', err)
		  //axios.post( jandiUrl , {'body': `Selenium auto-test#1 [ERROR]########### ${ JSON.stringify(err) }` } ,{ headers : jandiHeaders }).then((res_)=>{ console.log('err sent') })  
		  axios.post( jandiUrl , {'body': `Selenium auto-test#1 [ERROR]########### ${ err }` } ,{ headers : jandiHeaders }).then((res_)=>{ console.log('err sent') })  

	  }
  })
})
